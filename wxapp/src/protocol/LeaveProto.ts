// Code generated by Webpb compiler, do not edit.
// https://github.com/jg513/webpb

import * as Webpb from 'webpb';

export interface IAnnualLeavePb {
    taken: string;
    balanceToDate: string;
    balanceToYearEnd: string;
}

export class AnnualLeavePb implements IAnnualLeavePb {
    taken!: string;
    balanceToDate!: string;
    balanceToYearEnd!: string;
    META: () => Webpb.WebpbMeta;

    private constructor(p?: IAnnualLeavePb) {
        Webpb.assign(p, this, []);
        this.META = () => (p && {
            class: 'AnnualLeavePb',
            method: '',
            path: ''
        }) as Webpb.WebpbMeta;
    }

    static create(properties: IAnnualLeavePb): AnnualLeavePb {
        return new AnnualLeavePb(properties);
    }
}

export interface IAnnualLeaveInfoResponse {
    data: IAnnualLeavePb;
}

export class AnnualLeaveInfoResponse implements IAnnualLeaveInfoResponse {
    data!: IAnnualLeavePb;
    META: () => Webpb.WebpbMeta;

    private constructor(p?: IAnnualLeaveInfoResponse) {
        Webpb.assign(p, this, []);
        this.META = () => (p && {
            class: 'AnnualLeaveInfoResponse',
            method: '',
            path: ''
        }) as Webpb.WebpbMeta;
    }

    static create(properties: IAnnualLeaveInfoResponse): AnnualLeaveInfoResponse {
        return new AnnualLeaveInfoResponse(properties);
    }
}

export interface IAnnualLeaveInfoRequest {
    email: string;
}

export class AnnualLeaveInfoRequest implements IAnnualLeaveInfoRequest, Webpb.WebpbMessage {
    email!: string;
    META: () => Webpb.WebpbMeta;

    private constructor(p?: IAnnualLeaveInfoRequest) {
        Webpb.assign(p, this, []);
        this.META = () => (p && {
            class: 'AnnualLeaveInfoRequest',
            method: 'GET',
            path: `/api/policy/leave/balance${Webpb.query({
                email: p.email,
            })}`
        }) as Webpb.WebpbMeta;
    }

    static create(properties: IAnnualLeaveInfoRequest): AnnualLeaveInfoRequest {
        return new AnnualLeaveInfoRequest(properties);
    }
}
